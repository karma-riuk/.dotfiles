global !p
import px.snippets

def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
    return x != '0' and x != '0'

def latex_command(match):
	return f"{match.group(1)}\\{match.group(2)}"

endglobal

snippet subsub "Sub sub section"
\\subsubsection{${1:Sub sub section name}}
\\label{subsub:`!p snip.rv = t[1].lower().replace(" ", "_")`}
$0
endsnippet

snippet bf "bold text" w
\textbf{$1}
endsnippet

snippet ita "italics" w
\textit{$1}
endsnippet

context "math()"
priority 1
snippet '([^\\]|^)(bigc[ua]p|prod)' "setting the behaviour of sum to bigcup/bigcap/prod" rA
`!p snip.rv = match.group(1) + '\\'+ match.group(2)`${1:^{${2:n}}}_{${3:i=1}}
endsnippet

context "math()"
snippet text "\text{  }" 
\\text{ ${1:${VISUAL}} }$0
endsnippet


context "math()"
snippet binom "binomial coefficient (n choose k)"
\\binom{${1:n}}{${2:k}}
endsnippet

context "math()"
snippet '([pl])wer' "Power" rA
`!p snip.rv = '^' if match.group(1) == 'p' else '_'`{$1}$0
endsnippet
    
context "math()"
snippet '(q{1,2})(ua|au)d' "quads" rA
`!p snip.rv = "\\" + match.group(1) + "uad"`
endsnippet

context "math()"
snippet 'm(bb|cal) (\w)' "\mathbb{\w} or \mathcal{\w}" rA
`!p snip.rv = f"\\math{match.group(1)}{{{match.group(2).upper()}}}"`
endsnippet

# context "math()"
# snippet '(^|\W)([{}])' "{ -> \{ if after non character word (same with '}')" rA
# `!p snip.rv = match.group(1) + '\\' + match.group(2)`
# endsnippet

context "math()"
snippet '(^|[^\\a-zA-Z])(cdot|vdots|infty|forall|mapsto|oplus|o?times|bigbreak|mathbf)' "\ shortcut auto part 1" rA
`!p snip.rv = f"{match.group(1)}\\{match.group(2)}"`
endsnippet

context "math()"
snippet '(^|[^\\a-zA-Z])(bm|exists|o?int?|not|notin)' "\ shortcut auto part 2" rA
`!p snip.rv = f"{match.group(1)}\\{match.group(2)}"`
endsnippet

context "math()"
snippet '(^|[^\\a-zA-Z])(beta|[gG]amma|[dD]elta|[eE]psilon|[lL]ambda|[rR]ho|varphi)' "\ shortcut auto part 3" rA
`!p snip.rv = f"{match.group(1)}\\{match.group(2)}"`
endsnippet

context "math()"
snippet '(^|[^\\a-zA-Z])([Oo]mega|(var)?theta|[sS]igma|[Pp]hi|nabla|alpha|[pP]i|[mn]u)' "\ shortcut auto part 4" rA
`!p snip.rv = f"{match.group(1)}\\{match.group(2)}"`
endsnippet

context "math()"
snippet '(^|[^\\a-zA-Z])(implies|iff|neq|bar|[lg]eq|circ|to|lor|land|dim|neg|subset)' "\ shortcut auto part 5" rA
`!p snip.rv = f"{match.group(1)}\\{match.group(2)}"`
endsnippet

context "math()"
snippet '(^|[^\\a-zA-Z])(c[ua]p|emptyset|setminus|equiv|left|right|partial|triangle)' "\ shortcut auto part 6" rA
`!p snip.rv = f"{match.group(1)}\\{match.group(2)}"`
endsnippet

context "math()"
snippet '(^|[^\\a-zA-Z])(prec|succ|approx|deg|vec)' "\ shortcut auto part 7" rA
`!p snip.rv = f"{match.group(1)}\\{match.group(2)}"`
endsnippet

context "math()"
snippet -> "\to" Ai
\to
endsnippet

context "math()"
snippet => "\implies" Ai
\implies
endsnippet

snippet '^(def|thm|proof|remark|lemma|coro|exe|exa)' "paragraph/theorem of definition" r
`!p dic = {'def' : 'definition', 
            'thm' : 'theorem',
            'lemma' : 'lemma',
            'coro' : 'corollary',
            'proof' : 'proof',
            'remark' : 'remark',
            'exa' : 'example',
            'exe' : 'exercise',
            }`\\begin{`!p snip.rv = dic[match.group(1)]`}[$1]
    $0
\\end{`!p snip.rv = dic[match.group(1)]`}
endsnippet

snippet empheq "empheq"
\\begin{empheq}[box=\\tcbhighmath]{${1:equation}*}
	${0:${VISUAL}}
\\end{empheq}
endsnippet

snippet bf "\textbf{}"
\\textbf{${1:${VISUAL}}}$0
endsnippet

snippet ub "\underbrace{VISUAL}" w
\\underbrace{${1:${VISUAL}}}_{$2}$0
endsnippet

snippet ob "\overbrace{VISUAL}" w
\\overbrace{${1:${VISUAL}}}_{$2}$0
endsnippet

snippet sqrt "\sqrt{VISUAL}" A
\\sqrt{${1:${VISUAL}}}$0
endsnippet

snippet ref "\ref{$1:$2}"
\ref{$1}$0
endsnippet

snippet 'answer_(cg)' "Usi answer to assignments" r
`!p dic = {
	"cg": {
		"title": "Computer Graphics",
		"prof": "Piotr Didyk",
	}
}`\\documentclass[a4paper, 11pt]{article}
\\usepackage[utf8]{inputenc}
\\usepackage[T1]{fontenc}
\\usepackage[margin=3cm]{geometry}
\\usepackage[shortlabels]{enumitem}
\\usepackage{xcolor}
\\usepackage{kvoptions}
\\usepackage{amsmath}
\\usepackage{amssymb}
\\usepackage[title={`!p snip.rv = dic[match.group(1)]["title"]`},
    prof={`!p snip.rv = dic[match.group(1)]["prof"]`},
    set=${1:1},
    authors={Arnaud Fauconnet${2: \& Francesco Costa}},
    season=Autumn,
    year=22]{usi-answers}

\begin{document}
\maketitle
$0
\end{document}
endsnippet


global !p
def fix_indent(snip):
    vim.eval('feedkeys("\<c-f>")')
endglobal

post_expand "fix_indent(snip)"
snippet 'itm?' "Individual item" br
\item $0
endsnippet

post_expand "fix_indent(snip)"
snippet itd "Individual item" b
\item[$1] $0
endsnippet

post_jump "px.snippets.expand(snip)"
snippet itme "itemize alias" b
item$1
endsnippet


context "math()"
snippet '([lr])angle' "<" rA
\\`!p snip.rv = match.group(1)`angle
endsnippet
	

snippet img "include graphics" b
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=.8\textwidth]{${1:fig$2}}
\\end{figure}
endsnippet

snippet mini "two minipages"
\\begin{minipage}{.5\\textwidth}
	$1
\\end{minipage}
\\begin{minipage}{.49\\textwidth}
	${2:img }
\\end{minipage}
$0
endsnippet
	
